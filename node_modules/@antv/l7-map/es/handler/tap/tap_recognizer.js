import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
// @ts-ignore

import SingleTapRecognizer, { MAX_DIST, MAX_TAP_INTERVAL } from "./single_tap_recognizer";
export default class TapRecognizer {
  constructor(options) {
    _defineProperty(this, "singleTap", void 0);
    _defineProperty(this, "numTaps", void 0);
    _defineProperty(this, "lastTime", void 0);
    _defineProperty(this, "lastTap", void 0);
    _defineProperty(this, "count", void 0);
    this.singleTap = new SingleTapRecognizer(options);
    this.numTaps = options.numTaps;
    this.reset();
  }
  reset() {
    this.lastTime = Infinity;
    // @ts-ignore
    delete this.lastTap;
    this.count = 0;
    this.singleTap.reset();
  }
  touchstart(e, points, mapTouches) {
    this.singleTap.touchstart(e, points, mapTouches);
  }
  touchmove(e, points, mapTouches) {
    this.singleTap.touchmove(e, points, mapTouches);
  }
  touchend(e, points, mapTouches) {
    const tap = this.singleTap.touchend(e, points, mapTouches);
    if (tap) {
      const soonEnough = e.timeStamp - this.lastTime < MAX_TAP_INTERVAL;
      const closeEnough = !this.lastTap || this.lastTap.dist(tap) < MAX_DIST;
      if (!soonEnough || !closeEnough) {
        this.reset();
      }
      this.count++;
      this.lastTime = e.timeStamp;
      this.lastTap = tap;
      if (this.count === this.numTaps) {
        this.reset();
        return tap;
      }
    }
  }
}