import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
// @ts-ignore

import TapRecognizer from "./tap_recognizer";
export default class TapZoomHandler {
  constructor() {
    _defineProperty(this, "enabled", void 0);
    _defineProperty(this, "active", void 0);
    _defineProperty(this, "zoomIn", void 0);
    _defineProperty(this, "zoomOut", void 0);
    this.zoomIn = new TapRecognizer({
      numTouches: 1,
      numTaps: 2
    });
    this.zoomOut = new TapRecognizer({
      numTouches: 2,
      numTaps: 1
    });
    this.reset();
  }
  reset() {
    this.active = false;
    this.zoomIn.reset();
    this.zoomOut.reset();
  }
  touchstart(e, points, mapTouches) {
    this.zoomIn.touchstart(e, points, mapTouches);
    this.zoomOut.touchstart(e, points, mapTouches);
  }
  touchmove(e, points, mapTouches) {
    this.zoomIn.touchmove(e, points, mapTouches);
    this.zoomOut.touchmove(e, points, mapTouches);
  }
  touchend(e, points, mapTouches) {
    const zoomInPoint = this.zoomIn.touchend(e, points, mapTouches);
    const zoomOutPoint = this.zoomOut.touchend(e, points, mapTouches);
    if (zoomInPoint) {
      this.active = true;
      e.preventDefault();
      setTimeout(() => this.reset(), 0);
      return {
        cameraAnimation: map => map.easeTo({
          duration: 300,
          zoom: map.getZoom() + 1,
          around: map.unproject(zoomInPoint)
        }, {
          originalEvent: e
        })
      };
    } else if (zoomOutPoint) {
      this.active = true;
      e.preventDefault();
      setTimeout(() => this.reset(), 0);
      return {
        cameraAnimation: map => map.easeTo({
          duration: 300,
          zoom: map.getZoom() - 1,
          around: map.unproject(zoomOutPoint)
        }, {
          originalEvent: e
        })
      };
    }
  }
  touchcancel() {
    this.reset();
  }
  enable() {
    this.enabled = true;
  }
  disable() {
    this.enabled = false;
    this.reset();
  }
  isEnabled() {
    return this.enabled;
  }
  isActive() {
    return this.active;
  }
}