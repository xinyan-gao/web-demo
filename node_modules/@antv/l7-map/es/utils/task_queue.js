import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
// can't mark opaque due to https://github.com/flowtype/flow-remove-types/pull/61

class TaskQueue {
  constructor() {
    _defineProperty(this, "queue", void 0);
    _defineProperty(this, "id", void 0);
    _defineProperty(this, "cleared", void 0);
    _defineProperty(this, "currentlyRunning", void 0);
    this.queue = [];
    this.id = 0;
    this.cleared = false;
    this.currentlyRunning = false;
  }
  add(callback) {
    const id = ++this.id;
    const queue = this.queue;
    queue.push({
      callback,
      id,
      cancelled: false
    });
    return id;
  }
  remove(id) {
    const running = this.currentlyRunning;
    const queue = running ? this.queue.concat(running) : this.queue;
    for (const task of queue) {
      if (task.id === id) {
        task.cancelled = true;
        return;
      }
    }
  }
  run(timeStamp = 0) {
    const queue = this.currentlyRunning = this.queue;

    // Tasks queued by callbacks in the current queue should be executed
    // on the next run, not the current run.
    this.queue = [];
    for (const task of queue) {
      if (task.cancelled) {
        continue;
      }
      task.callback(timeStamp);
      if (this.cleared) {
        break;
      }
    }
    this.cleared = false;
    this.currentlyRunning = false;
  }
  clear() {
    if (this.currentlyRunning) {
      this.cleared = true;
    }
    this.queue = [];
  }
}
export default TaskQueue;